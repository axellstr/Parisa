---
interface Props {
  product: {
    id: string;
    name: string;
    slug: string;
    price: number;
    sale_price?: number | null;
    images: string[];
    description: string;
    collection: string;
    featured?: boolean;
    new_arrival?: boolean;
    in_stock: boolean;
  };
  collection: string;
  showQuickAdd?: boolean;
}

const { product, collection, showQuickAdd = true } = Astro.props;

const formatPrice = (price: number) => `Â£${(price / 100).toFixed(2)}`;
const mainImage = product.images[0];
const productUrl = `/collections/${collection}/${product.slug}`;
---

<article class="product-card" data-product-id={product.id}>
  <div class="product-image-container">
    <a href={productUrl} aria-label={`View ${product.name}`}>
      <img 
        src={mainImage} 
        alt={product.name}
        width="300"
        height="300"
        loading="lazy"
        class="product-image"
      />
    </a>
    
    {product.new_arrival && (
      <span class="product-badge new-arrival">New</span>
    )}
    
    {product.featured && (
      <span class="product-badge featured">Featured</span>
    )}
    
    {!product.in_stock && (
      <span class="product-badge sold-out">Sold Out</span>
    )}

    {showQuickAdd && product.in_stock && (
      <button 
        class="quick-add-btn add-to-cart"
        data-product-id={product.id}
        data-product-name={product.name}
        data-product-price={product.price}
        data-product-image={mainImage}
        data-product-slug={product.slug}
        data-product-collection={collection}
        aria-label={`Add ${product.name} to cart`}
      >
        Quick Add
      </button>
    )}
  </div>

  <div class="product-details">
    <h3 class="product-name">
      <a href={productUrl}>{product.name}</a>
    </h3>
    
    <p class="product-description">{product.description}</p>
    
    <div class="product-pricing">
      {product.sale_price ? (
        <>
          <span class="sale-price">{formatPrice(product.sale_price)}</span>
          <span class="original-price">{formatPrice(product.price)}</span>
        </>
      ) : (
        <span class="price">{formatPrice(product.price)}</span>
      )}
    </div>
  </div>
</article>

<style>
  .product-card {
    position: relative;
    background: white;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.3s ease;
    border: 1px solid rgba(36, 106, 115, 0.1);
  }


  .product-image-container {
    position: relative;
    overflow: hidden;
    aspect-ratio: 1;
  }

  .product-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .product-card:hover .product-image {
    transform: scale(1.05);
  }

  .product-badge {
    position: absolute;
    top: 0.75rem;
    left: 0.75rem;
    padding: 0.25rem 0.75rem;
    border-radius: 4px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    z-index: 2;
  }

  .product-badge.new-arrival {
    background: var(--secondary-turquoise);
    color: white;
  }

  .product-badge.featured {
    background: var(--primary-turquoise);
    color: white;
  }

  .product-badge.sold-out {
    background: var(--text-light);
    color: white;
  }

  .quick-add-btn {
    position: absolute;
    bottom: 0.75rem;
    left: 50%;
    transform: translateX(-50%) translateY(100%);
    background: var(--text-dark);
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 6px;
    font-size: 0.875rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    opacity: 0;
    z-index: 3;
    text-transform: uppercase;
    letter-spacing: 0.02em;
  }

  .product-card:hover .quick-add-btn {
    transform: translateX(-50%) translateY(0);
    opacity: 1;
  }

  .quick-add-btn:hover {
    background: var(--primary-turquoise);
    transform: translateX(-50%) translateY(-2px);
  }

  .product-details {
    padding: 1.25rem;
  }

  .product-name {
    margin: 0 0 0.5rem 0;
    font-size: 1.125rem;
    font-weight: 600;
    line-height: 1.4;
  }

  .product-name a {
    text-decoration: none;
    color: var(--text-dark);
    transition: color 0.2s ease;
    font-family: 'Playfair Display', serif;
  }

  .product-name a:hover {
    color: var(--primary-turquoise);
  }

  .product-description {
    margin: 0 0 1rem 0;
    color: var(--text-light);
    font-size: 0.875rem;
    line-height: 1.5;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .product-pricing {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .price {
    font-size: 1.25rem;
    font-weight: 700;
    color: var(--text-dark);
  }

  .sale-price {
    font-size: 1.25rem;
    font-weight: 700;
    color: #ef4444;
  }

  .original-price {
    font-size: 1rem;
    color: #9ca3af;
    text-decoration: line-through;
  }

  @media (max-width: 768px) {
    .product-card {
      border-radius: 6px;
    }

    .product-details {
      padding: 1rem;
    }

    .product-name {
      font-size: 1rem;
    }

    .quick-add-btn {
      opacity: 1;
      transform: translateX(-50%) translateY(0);
      position: static;
      transform: none;
      width: 100%;
      margin-top: 0.75rem;
    }
  }
</style>
