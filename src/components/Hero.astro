---
// Professional Hero Slider with 3 Collections using Swiper.js

// Use direct paths to public images (required for Vercel deployment)
const heroImage = '/images/hero.jpg';
const bendoOneImage = '/images/bendo-one.jpg';
const bendoTwoImage = '/images/hero-three.jpg';

const heroSlides = [
  {
    id: 1,
    image: heroImage,
    badge: "2025 KALEIDOSCOPE COLLECTION",
    title: "PARISA LONDON",
    subtitle: "MAYFAIR • LONDON",
    description: "PERSIAN TURQUOISE & RARE GEMSTONES",
    craftsmanship: "Handcrafted in 18K Gold",
    link: "/collections/kaleidoscope",
    alt: "Elegant Persian turquoise necklace with gold chain"
  },
  {
    id: 2,
    image: bendoOneImage,
    badge: "2025 HERITAGE COLLECTION",
    title: "PARISA LONDON",
    subtitle: "MAYFAIR • LONDON", 
    description: "TRADITIONAL PERSIAN ARTISTRY & DIAMONDS",
    craftsmanship: "Heritage Techniques in 22K Gold",
    link: "/collections/heritage",
    alt: "Traditional Persian heritage jewelry with diamonds"
  },
  {
    id: 3,
    image: bendoTwoImage,
    badge: "2025 FOREVER COLLECTION",
    title: "PARISA LONDON",
    subtitle: "MAYFAIR • LONDON",
    description: "ETERNAL ELEGANCE & PRECIOUS STONES",
    craftsmanship: "Timeless Design in Platinum",
    link: "/collections/forever", 
    alt: "Eternal Forever collection Persian jewelry design"
  }
];
---

<section class="hero-slider">
  <!-- Swiper Container -->
  <div class="swiper hero-swiper">
    <div class="swiper-wrapper">
      {heroSlides.map((slide) => (
        <div class="swiper-slide">
          <div class="hero-slide">
            <div class="hero-image-container">
              <img 
                src={slide.image} 
                alt={slide.alt}
                loading="eager"
                class="hero-bg-image"
                width="1920"
                height="1080"
              />
              <div class="hero-overlay"></div>
            </div>
            
            <div class="hero-content">
              <div class="hero-text">
                <div class="luxury-badge">{slide.badge}</div>
                
                <h1 class="hero-title">
                  {slide.title}
                  <span class="location-subtitle">{slide.subtitle}</span>
                </h1>
                
                <p class="hero-description">
                  {slide.description}<br>
                  <span class="craftsmanship">{slide.craftsmanship}</span>
                </p>
                
                <div class="hero-actions">
                  <a href={slide.link} class="btn btn-primary">Explore Collection</a>
                </div>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
    
    <!-- Professional Bullet Pagination -->
    <div class="swiper-pagination"></div>
  </div>
</section>

<style>
  @import "/src/styles/hero.css";
</style>

<script>
  import { Swiper } from 'swiper';
  import { Autoplay, Pagination } from 'swiper/modules';
  import { heroSwiperConfig, heroSwiperEvents, timingConfig } from '../config/swiper.ts';
  
  // Import Swiper styles
  import 'swiper/css';
  import 'swiper/css/autoplay';
  import 'swiper/css/pagination';

  // Create the swiper configuration by merging the imported config with modules and events
  const swiperConfig = {
    ...heroSwiperConfig,
    modules: [Autoplay, Pagination], // Use actual module imports instead of strings
    on: heroSwiperEvents,
  };

  // Instagram-Style Interactive Hero Swiper Configuration
  const heroSwiper = new Swiper('.hero-swiper', swiperConfig);

  // Enhanced visibility change handling
  document.addEventListener('visibilitychange', () => {
    if (document.hidden) {
      if (heroSwiper.autoplay && 'stop' in heroSwiper.autoplay) {
        (heroSwiper.autoplay as any).stop();
      }
    } else {
      // Resume with slight delay when page becomes visible
      setTimeout(() => {
        if (heroSwiper.autoplay && 'start' in heroSwiper.autoplay) {
          (heroSwiper.autoplay as any).start();
        }
      }, timingConfig.visibilityResumeDelay);
    }
  });

  // Professional focus management for accessibility
  document.addEventListener('focusin', (e) => {
    if (heroSwiper.el && e.target instanceof Node && heroSwiper.el.contains(e.target)) {
      if (heroSwiper.autoplay && 'stop' in heroSwiper.autoplay) {
        (heroSwiper.autoplay as any).stop();
      }
    }
  });

  document.addEventListener('focusout', (e) => {
    const relatedTarget = e.relatedTarget;
    if (heroSwiper.el && (!relatedTarget || !heroSwiper.el.contains(relatedTarget as Node))) {
      setTimeout(() => {
        if (heroSwiper.autoplay && 'start' in heroSwiper.autoplay) {
          (heroSwiper.autoplay as any).start();
        }
      }, timingConfig.focusResumeDelay);
    }
  });
</script>
