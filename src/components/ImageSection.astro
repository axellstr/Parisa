---
// Reusable ImageSection component for displaying featured images
import { Image } from 'astro:assets';

interface Props {
  imageSrc: string;
  altText: string;
  className?: string;
}

const { imageSrc, altText, className = "" } = Astro.props;

// Import images based on imageSrc prop
const imageMap: Record<string, () => Promise<any>> = {
  '/images/image-one.jpg': () => import('../../public/images/image-one.jpg'),
  '/images/image-two.jpg': () => import('../../public/images/image-two.jpg'),
};

const imageModule = imageMap[imageSrc] ? await imageMap[imageSrc]() : null;
const optimizedImage = imageModule?.default || imageSrc;
---

<section class={`image-section ${className}`}>
  <div class="image-container">
    {imageModule ? (
      <Image 
        src={optimizedImage} 
        alt={altText} 
        class="featured-image"
        loading="lazy"
        width={1200}
        height={400}
        format="webp"
        quality={80}
      />
    ) : (
      <img 
        src={imageSrc} 
        alt={altText} 
        class="featured-image"
        loading="lazy"
      />
    )}
  </div>
</section>

<style>
  .image-section {
    width: 100%;
    position: relative;
  }

  .image-container {
    position: relative;
    width: 100%;
    height: 30vh;
    min-height: 250px;
    overflow: hidden;
    margin: 0 auto;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .featured-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .image-container {
      height: 25vh;
      min-height: 200px;
      padding: 0;
    }
  }
</style>